{"remainingRequest":"/Users/joebrundage/Desktop/blog/front-end/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/joebrundage/Desktop/blog/front-end/blog/src/views/Edit.vue?vue&type=style&index=0&media=screen&lang=css&","dependencies":[{"path":"/Users/joebrundage/Desktop/blog/front-end/blog/src/views/Edit.vue","mtime":1638658989174},{"path":"/Users/joebrundage/Desktop/blog/front-end/blog/node_modules/css-loader/dist/cjs.js","mtime":1638565186933},{"path":"/Users/joebrundage/Desktop/blog/front-end/blog/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1638565188395},{"path":"/Users/joebrundage/Desktop/blog/front-end/blog/node_modules/postcss-loader/src/index.js","mtime":1638565187266},{"path":"/Users/joebrundage/Desktop/blog/front-end/blog/node_modules/cache-loader/dist/cjs.js","mtime":1638565186213},{"path":"/Users/joebrundage/Desktop/blog/front-end/blog/node_modules/vue-loader/lib/index.js","mtime":1638565187852}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbnB1dCwKdGV4dGFyZWEsCnNlbGVjdCwKYnV0dG9uIHsKICBmb250LWZhbWlseTogJ0dhcmFtb25kJywgc2VyaWY7CiAgZm9udC1zaXplOiAxZW07Cn0KCi5zdWdnZXN0aW9ucyB7CiAgd2lkdGg6IDIwMHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgbWFyZ2luOiAxZW0gYXV0bzsKfQoKLnN1Z2dlc3Rpb24gewogIG1pbi1oZWlnaHQ6IDIwcHg7Cn0KCi5zdWdnZXN0aW9uOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjNUJERUZGOwogIGNvbG9yOiAjZmZmOwp9Cgouc3BhY2UgewogIG1hcmdpbjogNWVtOwp9Cg=="},{"version":3,"sources":["Edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+OA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Edit.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"Edit\">\n  <h1>Article Editor</h1>\n\n  <div class=\"add\">\n    <h2>Add Blog Post</h2>\n    <div class=\"form\">\n      <input v-model=\"title\" placeholder=\"Article Title\">\n      <p></p>\n      <input v-model=\"author\" placeholder=\"Author\">\n      <p></p>\n      <input v-model=\"date\" placeholder=\"Date (Month #, YYYY)\">\n      <p></p>\n      <textarea v-model=\"article\" placeholder=\"Post\"></textarea>\n      <p></p>\n      <button @click=\"upload\">Post</button>\n    </div>\n    <div class=\"article-uploaded\" v-if=\"addItem\">\n      <h3>Added article: {{addItem.title}}</h3>\n    </div>\n  </div>\n\n  <div class=\"delete\">\n    <h2>Edit/Delete Blog Post</h2>\n    <div class=\"edit\">\n      <div class=\"form\">\n        <input v-model=\"findTitle\" placeholder=\"Search\">\n        <div class=\"suggestions\" v-if=\"suggestions.length > 0\">\n          <div class=\"suggestion\" v-for=\"s in suggestions\" :key=\"s.id\" @click=\"selectItem(s)\">{{s.title}} by {{s.author}} ({{s.date}})\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"upload\" v-if=\"findArticle\">\n      <input v-model=\"findArticle.title\">\n      <p></p>\n      <input v-model=\"findArticle.author\">\n      <p></p>\n      <input v-model=\"findArticle.date\">\n      <p></p>\n      <textarea v-model=\"findArticle.article\"></textarea>\n    </div>\n\n    <div class=\"actions\" v-if=\"findArticle\">\n      <button @click=\"editArticle(findArticle)\">Edit</button>\n      <p></p>\n      <button @click=\"deleteArticle(findArticle)\">Delete</button>\n    </div>\n  </div>\n\n  <h1>Author Editor</h1>\n  <div class=\"add\">\n    <h2>Add author</h2>\n    <div class=\"form\">\n      <input v-model=\"authorName\" placeholder=\"Author Name\">\n      <p></p>\n      <input v-model=\"location\" placeholder=\"Place of Residence\">\n      <p></p>\n      <textarea v-model=\"biography\" placeholder=\"Biography\"></textarea>\n      <p></p>\n      <button @click=\"addAuthor\">Add</button>\n    </div>\n    <div class=\"author-uploaded\" v-if=\"addedAuthor\">\n      <h3>{{addedAuthor.name}} is now registered as an author.</h3>\n    </div>\n  </div>\n\n  <div class=\"delete\">\n    <h2>Edit/Delete Author</h2>\n    <div class=\"edit\">\n      <div class=\"suggestions\">\n        <div class=\"suggestion\" v-for=\"a in authors\" :key=\"a.id\" @click=\"selectAuthor(a)\">{{a.name}}\n        </div>\n      </div>\n    </div>\n\n    <div class=\"upload\" v-if=\"findAuthor\">\n      <input v-model=\"findAuthor.name\">\n      <p></p>\n      <input v-model=\"findAuthor.location\">\n      <p></p>\n      <textarea v-model=\"findAuthor.biography\"></textarea>\n    </div>\n\n    <div class=\"actions\" v-if=\"findAuthor\">\n      <button @click=\"editAuthor(findAuthor)\">Edit</button>\n      <p></p>\n      <button @click=\"deleteAuthor(findAuthor)\">Delete</button>\n    </div>\n\n    <div class=\"space\">\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'Edit',\n  data() {\n    return {\n      title: \"\",\n      author: \"\",\n      date: \"\",\n      article: \"\",\n      addItem: null,\n      articles: [],\n      findTitle: \"\",\n      authors: [],\n      findArticle: null,\n      authorName: \"\",\n      biography: \"\",\n      location: \"\",\n      addedAuthor: null,\n      findAuthorName: \"\",\n      findAuthor: null\n    }\n  },\n  computed: {\n    suggestions() {\n      let articles = this.articles.filter(article => article.title.toLowerCase().startsWith(this.findTitle.toLowerCase()));\n      return articles.sort((a, b) => a.title > b.title);\n    }\n  },\n  created() {\n    this.getArticles();\n    this.getAuthors();\n  },\n  methods: {\n    async upload() {\n      try {\n        let r1 = await axios.post('/api/articles', {\n          title: this.title,\n          author: this.author,\n          date: this.date,\n          article: this.article\n        });\n        this.addItem = r1.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getAuthors() {\n      try {\n        let response = await axios.get('/api/authors');\n        this.authors = response.data;\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getArticles() {\n      try {\n        let response = await axios.get('/api/articles');\n        this.articles = response.data;\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    selectItem(article) {\n      this.findTitle = \"\";\n      this.findArticle = article;\n    },\n    selectAuthor(author) {\n      this.findAuthorName = \"\";\n      this.findAuthor = author;\n    },\n    async deleteArticle(article) {\n      try {\n        await axios.delete('/api/articles/' + article._id);\n        this.findArticle = null;\n        this.getArticles();\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async editArticle(article) {\n      try {\n        await axios.put('/api/articles/' + article._id, {\n          title: this.findArticle.title,\n          author: this.findArticle.author,\n          date: this.findArticle.date,\n          article: this.findArticle.article\n        });\n        this.findArticle = null;\n        this.getArticles();\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async addAuthor() {\n      console.log(\"in addAuthor\")\n      try {\n        let r1 = await axios.post('/api/authors', {\n          name: this.authorName,\n          location: this.location,\n          biography: this.biography\n        });\n        this.addedAuthor = r1.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async editAuthor(author) {\n      try {\n        await axios.put('/api/authors/' + author._id, {\n          name: author.name,\n          location: author.location,\n          biography: author.biography,\n        });\n        this.findAuthor = null;\n        this.getAuthors();\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async deleteAuthor(author) {\n      try {\n        await axios.delete('/api/authors/' + author._id);\n        this.findAuthor = null;\n        this.getAuthors();\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  }\n\n}\n</script>\n\n<style media=\"screen\">\ninput,\ntextarea,\nselect,\nbutton {\n  font-family: 'Garamond', serif;\n  font-size: 1em;\n}\n\n.suggestions {\n  width: 200px;\n  border: 1px solid #ccc;\n  margin: 1em auto;\n}\n\n.suggestion {\n  min-height: 20px;\n}\n\n.suggestion:hover {\n  background-color: #5BDEFF;\n  color: #fff;\n}\n\n.space {\n  margin: 5em;\n}\n</style>\n"]}]}